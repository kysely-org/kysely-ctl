name: tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  unit:
    runs-on: ubuntu-latest

    name: Unit Tests

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Use Node.js LTS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  node:
    strategy:
      matrix:
        node-version: [20, 22, 24]
        os: [macos-latest, ubuntu-latest, windows-latest]
        type: [cjs, esm, esm-tsconfig-paths, esm-tsconfig-paths-inherited, esm-tsconfig-paths-no-baseurl, esm-top-level-await, esm-environments, esm-jsx]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    name: ${{ matrix.os }} + Node.js v${{ matrix.node-version }} + ${{ matrix.type }}

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Calculate additional flags
        id: flags
        shell: bash
        run: |
          ADDITIONAL_FLAGS="--debug"

          if [[ ${{ matrix.type }} == 'esm-tsconfig-paths'* ]]; then
            ADDITIONAL_FLAGS+=" --experimental-resolve-tsconfig-paths"
          fi

          if [[ ${{ matrix.type}} == 'esm-environments' ]]; then
            ADDITIONAL_FLAGS+=" -e lib2"
          fi

          echo "ADDITIONAL_FLAGS=$ADDITIONAL_FLAGS" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: pnpm i && pnpm build && cd examples/node-${{ matrix.type }} && pnpm i

      - name: kysely -v
        working-directory: examples/node-${{ matrix.type }}
        run: pnpm kysely -v

      - name: kysely migrate:make <migration-name> ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
        working-directory: examples/node-${{ matrix.type }}
        run: pnpm kysely migrate:make moshe ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

      - name: kysely migrate:list ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
        working-directory: examples/node-${{ matrix.type }}
        run: pnpm kysely migrate:list ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

      - name: kysely migrate:latest ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
        working-directory: examples/node-${{ matrix.type }}
        run: pnpm kysely migrate:latest ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

      - name: kysely sql <query> ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
        working-directory: examples/node-${{ matrix.type }}
        run: |
          pnpm kysely sql "insert into moshe (id, is_moshe) values (1, true)" ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
          pnpm kysely sql "select * from moshe" ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

      - name: kysely migrate:rollback --all ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}
        working-directory: examples/node-${{ matrix.type }}
        run: pnpm kysely migrate:rollback --all ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

      - name: kysely migrate:list ${{ steps.flags.outputs.ADDITIONAL_FLAGS }} (nearest config search)
        working-directory: examples/node-${{ matrix.type }}/${{ startsWith(matrix.type, 'esm-environments') && 'packages' || 'migrations' }}
        run: pnpm kysely migrate:list ${{ steps.flags.outputs.ADDITIONAL_FLAGS }}

  bun:
    runs-on: ubuntu-latest

    name: ubuntu-latest + Bun

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Use Node.js LTS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: "pnpm"

      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2.0.2
        with:
          bun-version: latest

      - name: Install dependencies
        run: pnpm i && pnpm build && bun link && cd examples/bun && bun install

      - name: kysely -v
        working-directory: examples/bun
        run: bun --bun kysely -v

      - name: kysely migrate:make <migration-name>
        working-directory: examples/bun
        run: bun --bun kysely migrate:make moshe --debug

      - name: kysely migrate:list
        working-directory: examples/bun
        run: bun --bun kysely migrate:list --debug

      - name: kysely migrate:latest
        working-directory: examples/bun
        run: bun --bun kysely migrate:latest --debug

      - name: kysely migrate:rollback --all
        working-directory: examples/bun
        run: bun --bun kysely migrate:rollback --all --debug

      - name: kysely migrate:list (nearest config search)
        working-directory: examples/bun/migrations
        run: bun --bun kysely migrate:list --debug

  deno:
    strategy:
      matrix:
        config-flavor: [deno-json, package-json, no-config]
      fail-fast: false

    runs-on: ubuntu-latest

    name: ubuntu-latest + Deno + ${{ matrix.config-flavor }}

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Use Node.js LTS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: "pnpm"

      - uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: vx.x.x

      - name: Build CTL
        run: pnpm i && pnpm build

      - name: Install example dependencies
        if: matrix.config-flavor != 'no-config'
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno install --node-modules-dir

      - name: kysely -v
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno task kysely -v

      - name: kysely migrate:make <migration-name>
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno task kysely migrate:make moshe --debug

      - name: kysely migrate:list
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno task kysely migrate:list --debug

      - name: kysely migrate:latest
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno task kysely migrate:latest --debug

      - name: kysely migrate:rollback --all
        working-directory: examples/deno-${{ matrix.config-flavor }}
        run: deno task kysely migrate:rollback --all --debug

      - name: kysely migrate:list (nearest config search)
        working-directory: examples/deno-${{ matrix.config-flavor }}/migrations
        run: deno task kysely migrate:list --debug
